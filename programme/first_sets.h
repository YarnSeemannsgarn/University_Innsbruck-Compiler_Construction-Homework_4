#ifndef FIRST_SETS_H
#define FIRST_SETS_H

#include "tokens.h"
#include "set.h"

// No first sets with epsilon
node FIRST_SET_START;
FIRST_SET_START = insert_right(FIRST_SET_START, PROGRAM);

node FIRST_SET_IDENT_LIST_TYPE;
FIRST_SET_IDENT_LIST_TYPE = insert_right(FIRST_SET_IDENT_LIST_TYPE, ID);

node FIRST_SET_IDENT_LIST;
FIRST_SET_IDENT_LIST = insert_right(FIRST_SET_IDENT_LIST, ID);

node FIRST_SET_TYPE;
FIRST_SET_TYPE = insert_right(FIRST_SET_TYPE, INTEGER);
FIRST_SET_TYPE = insert_right(FIRST_SET_TYPE, REAL);
FIRST_SET_TYPE = insert_right(FIRST_SET_TYPE, BOOLEAN);
FIRST_SET_TYPE = insert_right(FIRST_SET_TYPE, ARRAY);

node FIRST_SET_SIMPLE_TYPE;
FIRST_SET_SIMPLE_TYPE = insert_right(FIRST_SET_SIMPLE_TYPE, REAL);
FIRST_SET_SIMPLE_TYPE = insert_right(FIRST_SET_SIMPLE_TYPE, BOOLEAN);
FIRST_SET_SIMPLE_TYPE = insert_right(FIRST_SET_SIMPLE_TYPE, ARRAY);

node FIRST_SET_COMP_STMT;
FIRST_SET_COMP_STMT = insert_right(FIRST_SET_COMP_STMT, _BEGIN)

node FIRST_SET_STMT_LIST;
FIRST_SET_STMT_LIST = insert_right(FIRST_SET_STMT_LIST, ID);
FIRST_SET_STMT_LIST = insert_right(FIRST_SET_STMT_LIST, _BEGIN);
FIRST_SET_STMT_LIST = insert_right(FIRST_SET_STMT_LIST, IF);
FIRST_SET_STMT_LIST = insert_right(FIRST_SET_STMT_LIST, WHILE);
FIRST_SET_STMT_LIST = insert_right(FIRST_SET_STMT_LIST, FOR);
FIRST_SET_STMT_LIST = insert_right(FIRST_SET_STMT_LIST, READ);
FIRST_SET_STMT_LIST = insert_right(FIRST_SET_STMT_LIST, WRITE);

node FIRST_SET_STATEMENT;
FIRST_SET_STATEMENT = insert_right(FIRST_SET_STATEMENT, ID);
FIRST_SET_STATEMENT = insert_right(FIRST_SET_STATEMENT, _BEGIN);
FIRST_SET_STATEMENT = insert_right(FIRST_SET_STATEMENT, IF);
FIRST_SET_STATEMENT = insert_right(FIRST_SET_STATEMENT, WHILE);
FIRST_SET_STATEMENT = insert_right(FIRST_SET_STATEMENT, FOR);
FIRST_SET_STATEMENT = insert_right(FIRST_SET_STATEMENT, READ);
FIRST_SET_STATEMENT = insert_right(FIRST_SET_STATEMENT, WRITE);

node FIRST_SET_ASSIGN_STMT;
FIRST_SET_ASSIGN_STMT = insert_right(FIRST_SET_ASSIGN_STMT, ID);

node FIRST_SET_ASSIGNT_STMT_2;
FIRST_SET_ASSIGNT_STMT_2 = insert_right(FIRST_SET_ASSIGNT_STMT_2, ASSIGNMENT);
FIRST_SET_ASSIGNT_STMT_2 = insert_right(FIRST_SET_ASSIGNT_STMT_2, RIGHT_SQUARE_BRACKET);

node FIRST_SET_IF_STMT;
FIRST_SET_IF_STMT = insert_right(FIRST_SET_IF_STMT, IF);

node FIRST_SET_WHILE_STMT;
FIRST_SET_WHILE_STMT = insert_right(FIRST_SET_WHILE_STMT, WHILE);

node FIRST_SET_FOR_STMT;
FIRST_SET_FOR_STMT = insert_right(FIRST_SET_FOR_STMT, FOR);

node FIRST_SET_TO_PART;
FIRST_SET_TO_PART = insert_right(FIRST_SET_TO_PART, TO);
FIRST_SET_TO_PART = insert_right(FIRST_SET_TO_PART, DOWNTO);

node FIRST_SET_EXPR;
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, NUMBER);
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, FALSE);
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, TRUE);
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, ID);
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, NOT);
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, MINUS);
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, RIGHT_BRACKET);
FIRST_SET_EXPR = insert_right(FIRST_SET_EXPR, STRING);

node FIRST_SET_EXPR_LIST;
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, NUMBER);
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, FALSE);
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, TRUE);
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, ID);
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, NOT);
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, MINUS);
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, RIGHT_BRACKET);
FIRST_SET_EXPR_LIST = insert_right(FIRST_SET_EXPR_LIST, STRING);

node FIRST_SET_SIMPLE_EXPR;
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, NUMBER);
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, FALSE);
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, TRUE);
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, ID);
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, NOT);
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, MINUS);
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, RIGHT_BRACKET);
FIRST_SET_SIMPLE_EXPR = insert_right(FIRST_SET_SIMPLE_EXPR, STRING);

node FIRST_SET_TERM;
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, NUMBER);
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, FALSE);
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, TRUE);
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, ID);
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, NOT);
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, MINUS);
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, RIGHT_BRACKET);
FIRST_SET_TERM = insert_right(FIRST_SET_TERM, STRING);

node FIRST_SET_FACTOR;
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, NUMBER);
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, FALSE);
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, TRUE);
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, ID);
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, NOT);
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, MINUS);
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, RIGHT_BRACKET);
FIRST_SET_FACTOR = insert_right(FIRST_SET_FACTOR, STRING);

node FIRST_SET_REL_OP;
FIRST_SET_REL_OP = insert_right(FIRST_SET_REL_OP, LESS_THAN);
FIRST_SET_REL_OP = insert_right(FIRST_SET_REL_OP, LESS_EQUAL_THAN);
FIRST_SET_REL_OP = insert_right(FIRST_SET_REL_OP, GREATER_THAN);
FIRST_SET_REL_OP = insert_right(FIRST_SET_REL_OP, GREATER_EQUAL_THAN);
FIRST_SET_REL_OP = insert_right(FIRST_SET_REL_OP, EQUAL);
FIRST_SET_REL_OP = insert_right(FIRST_SET_REL_OP, UNEQUAL);

node FIRST_SET_ADD_OP;
FIRST_SET_ADD_OP = insert_right(FIRST_SET_ADD_OP, PLUS);
FIRST_SET_ADD_OP = insert_right(FIRST_SET_ADD_OP, MINUS);
FIRST_SET_ADD_OP = insert_right(FIRST_SET_ADD_OP, OR);

node FIRST_SET_MUL_OP;
FIRST_SET_MUL_OP = insert_right(FIRST_SET_MUL_OP, STAR);
FIRST_SET_MUL_OP = insert_right(FIRST_SET_MUL_OP, SLASH);
FIRST_SET_MUL_OP = insert_right(FIRST_SET_MUL_OP, DIV);
FIRST_SET_MUL_OP = insert_right(FIRST_SET_MUL_OP, MOD);
FIRST_SET_MUL_OP = insert_right(FIRST_SET_MUL_OP, AND);

#endif
